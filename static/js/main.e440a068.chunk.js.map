{"version":3,"sources":["Components/Layout/Navbar.js","Components/Layout/spinner34.gif","Components/Layout/LoadingSpinner.js","Components/users/UserItem.js","Components/users/Users.js","Components/Layout/BrandName.js","Components/Layout/search34.gif","Components/Layout/Finder.js","Components/users/Search.js","Components/Layout/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","id","icon","title","defaultProps","LoadingSpinner","src","spinner34","alt","style","width","margin","UserItem","user","avatar_url","login","href","html_url","propType","PropTypes","array","Users","users","loading","map","BrandName","Finder","search34","justifyContent","textAlign","Search","useState","text","setText","onSubmit","event","preventDefault","setAlert","searchUsers","type","name","value","placeholder","onChange","target","showClear","onClick","clearUsers","showFinder","Alert","alert","msg","App","state","a","setState","axios","get","process","res","data","items","setTimeout","this","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e440a068.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className='navbar'>\r\n            <h1>\r\n                <i id='navbar-icon' className={props.icon} />\r\n                {props.title}\r\n            </h1>\r\n        </nav>\r\n    );\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title: 'GitHub Finder',\r\n    icon: 'fa fa-github',\r\n};\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    icon: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/spinner34.5b35cef0.gif\";","import React from 'react';\r\nimport spinner34 from \"./spinner34.gif\";\r\n\r\nexport const LoadingSpinner = () => {\r\n    return (\r\n        <div className='container' >\r\n            <p id='mining'>Mining...</p>\r\n            <img\r\n                src={spinner34}\r\n                alt='Loading...'\r\n                style={{ width: '200px', margin: 'auto' }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst UserItem = (props) => {\r\n    return (\r\n        <div className='card text-center'>\r\n            <img\r\n                src={props.user?.avatar_url}\r\n                alt='img is not avilable'\r\n                className='round-img'\r\n                style={{ width: '60px' }}\r\n            />\r\n            <h3>{props.user?.login}</h3>\r\n            <a href={props.user?.html_url} className='btn btn-dark btn-sm my-1'>\r\n                More\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\nUserItem.propType = {\r\n    user: PropTypes.array,\r\n};\r\nexport default UserItem;\r\n","import React from 'react';\r\nimport { LoadingSpinner } from '../Layout/LoadingSpinner';\r\nimport UserItem from './UserItem';\r\nimport PropTypes from 'prop-types';\r\nconst Users = ({ users, loading }) => {\r\n    if (loading) {\r\n        return (\r\n            <div className='user-container'>\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className='grid-3'>\r\n                {users.map((user) => (\r\n                    <UserItem key={user.id} user={user} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n};\r\nUsers.propTypes = {\r\n    loading: PropTypes.bool,\r\n    users: PropTypes.array,\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\n\r\nexport default function BrandName(props) {\r\n    return <div className='brand-name'>{props.title}</div>;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/search34.29e3b455.gif\";","import React from 'react';\r\nimport search34 from './search34.gif';\r\n\r\nexport const Finder = (props) => {\r\n    return (\r\n        <div className='user-container'>\r\n            <img\r\n                src={search34}\r\n                alt='Use Search Bar....'\r\n                style={{\r\n                    width: '200px',\r\n                    margin: 'auto',\r\n                    justifyContent: 'center',\r\n                    textAlign: 'center',\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import { React, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Finder } from '../Layout/Finder';\r\n\r\nexport default function Search(props) {\r\n    const [text, setText] = useState('');\r\n\r\n    const onChangeHandle = (event) => {\r\n        setText(event.target.value);\r\n    };\r\n    const onSubmitHandle = (event) => {\r\n        event.preventDefault();\r\n        if (text === '') {\r\n            props.setAlert('Username Field should not be blank', 'light');\r\n        } else {\r\n            props.searchUsers(text);\r\n            setText('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='search-console'>\r\n                <form className='form' onSubmit={onSubmitHandle}>\r\n                    <input\r\n                        id='username-input'\r\n                        type='text'\r\n                        name='text'\r\n                        value={text}\r\n                        placeholder='Enter Username...'\r\n                        onChange={onChangeHandle}\r\n                    />\r\n                    <input\r\n                        type='submit'\r\n                        value='Search'\r\n                        className='btn btn-dark'\r\n                    />\r\n\r\n                    {props.showClear && (\r\n                        <button\r\n                            className='btn btn-dark'\r\n                            onClick={props.clearUsers}\r\n                        >\r\n                            Clear\r\n                        </button>\r\n                    )}\r\n                </form>\r\n            </div>\r\n            {props.showFinder && (\r\n                <div>\r\n                    <Finder />\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\nSearch.propTypes = {\r\n    searchUsers: PropTypes.func,\r\n    onClearHandle: PropTypes.func,\r\n    showClear:PropTypes.bool,\r\n    showFinder:PropTypes.bool\r\n};\r\n","import React from 'react'\r\n\r\nexport const Alert = ({ alert }) => {\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type}`}>\r\n        <i className='fa fa-info-circle' /> {alert.msg}\r\n\r\n      </div>\r\n    )\r\n  )\r\n}\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport Navbar from './Components/Layout/Navbar';\nimport Users from './Components/users/Users';\nimport axios from 'axios';\nimport BrandName from './Components/Layout/BrandName';\nimport Search from './Components/users/Search';\nimport { Alert } from './Components/Layout/Alert';\n\nclass App extends Component {\n    state = {\n        users: [],\n        loading: false,\n        alert: null,\n    };\n\n    // async componentDidMount() {\n    //     console.log(process.env.REACT_APP_GITHUB_CLIENT_SECRET);\n    //     this.setState({ loading: true });\n    //     const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client?secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    //     this.setState({ users: res.data, loading: false });\n    // }\n\n    //search github users\n    searchUsers = async (text) => {\n        this.setState({ loading: true });\n        const res = await axios.get(\n            `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client?secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n        );\n        this.setState({ users: res.data.items, loading: false });\n    };\n    //clear users from window\n    clearUsers = () => {\n        this.setState({ users: [], loading: false });\n    };\n\n    setAlert = (msg, type) => {\n        this.setState({ alert: { msg: msg, type: type } });\n        setTimeout(() => this.setState({alert:null}),2000)\n    };\n\n    render() {\n        return (\n            <div className='App'>\n                <div className='brand-and-nav'>\n                    <Navbar title='GitHub Lense 🛰' icon='fa fa-github' />\n                    <BrandName title={'GitHub Lense'} />\n                    <div className='search-users'>\n                        <Alert alert={this.state.alert} />\n                        <Search\n                            searchUsers={this.searchUsers}\n                            clearUsers={this.clearUsers}\n                            showClear={\n                                this.state.users.length > 0 ? true : false\n                            }\n                            showFinder={\n                                this.state.users.length === 0 ? true : false\n                            }\n                            setAlert={this.setAlert}\n                        />\n                    </div>\n                </div>\n                <div className='search-users'>\n                    <div className='user-container'>\n                        <Users\n                            loading={this.state.loading}\n                            users={this.state.users}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}